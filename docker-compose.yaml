version: "3.9"

services:
  # Postgres database service
  postgres:
    image: postgres:14.6
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: url_shortener
    ports:
      - "5433:5432"
    volumes:
      - us_postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - postgres
      - url-shortener

  # pgAdmin web interface for managing Postgres
  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "8081:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    links:
      - postgres:postgres
    volumes:
      - us_pgadmindata:/root/.pgadmin
      - us_pgadminlibdata:/var/lib/pgadmin
    networks:
      - postgres
      - url-shortener

  # Redis service for caching
  redis:
    image: redis:latest
    ports:
      - "6380:6379"
    volumes:
      - us_redis_data:/data
    networks:
      - url-shortener

  backend:
    container_name: url_shortener_app
    image: url_shortener_app
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - 3080:3080
    networks:
      - url-shortener
    environment:
      - TYPEORM_HOST=postgres
      - TYPEORM_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - .:/home/node/app/
      - /home/node/app/node_modules
    depends_on:
      - postgres
      - redis

  migration:
    build:
      context: .
    command:
      [ "npm", "run", "migrate" ]
    links:
      - postgres
    depends_on:
      - postgres
      - backend
    networks:
      - url-shortener
    environment:
      - TYPEORM_HOST=postgres
      - TYPEORM_PORT=5432

# Volumes to persist data
volumes:
  us_postgres_data: 
    driver: local
  us_pgadmindata: 
    driver: local
  us_pgadminlibdata: 
    driver: local
  us_redis_data: 
    driver: local

networks:
  postgres:
    driver: bridge
  url-shortener:
    driver: bridge